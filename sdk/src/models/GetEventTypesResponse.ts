/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventType } from './EventType';
import {
    EventTypeFromJSON,
    EventTypeFromJSONTyped,
    EventTypeToJSON,
} from './EventType';

/**
 * 
 * @export
 * @interface GetEventTypesResponse
 */
export interface GetEventTypesResponse {
    /**
     * Response code.
     * @type {string}
     * @memberof GetEventTypesResponse
     */
    code?: string;
    /**
     * Response message.
     * @type {string}
     * @memberof GetEventTypesResponse
     */
    message?: string;
    /**
     * 
     * @type {Array<EventType>}
     * @memberof GetEventTypesResponse
     */
    eventTypes?: Array<EventType>;
}

/**
 * Check if a given object implements the GetEventTypesResponse interface.
 */
export function instanceOfGetEventTypesResponse(value: object): boolean {
    return true;
}

export function GetEventTypesResponseFromJSON(json: any): GetEventTypesResponse {
    return GetEventTypesResponseFromJSONTyped(json, false);
}

export function GetEventTypesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEventTypesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'] == null ? undefined : json['code'],
        'message': json['message'] == null ? undefined : json['message'],
        'eventTypes': json['event_types'] == null ? undefined : ((json['event_types'] as Array<any>).map(EventTypeFromJSON)),
    };
}

export function GetEventTypesResponseToJSON(value?: GetEventTypesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'message': value['message'],
        'event_types': value['eventTypes'] == null ? undefined : ((value['eventTypes'] as Array<any>).map(EventTypeToJSON)),
    };
}

