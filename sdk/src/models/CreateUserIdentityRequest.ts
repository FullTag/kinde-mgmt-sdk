/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserIdentityRequest
 */
export interface CreateUserIdentityRequest {
    /**
     * The email address, or username of the user.
     * @type {string}
     * @memberof CreateUserIdentityRequest
     */
    value?: string;
    /**
     * The identity type
     * @type {string}
     * @memberof CreateUserIdentityRequest
     */
    type?: CreateUserIdentityRequestTypeEnum;
    /**
     * The country code for the phone number, only required when identity type is 'phone'.
     * @type {string}
     * @memberof CreateUserIdentityRequest
     */
    phoneCountryId?: string;
}


/**
 * @export
 */
export const CreateUserIdentityRequestTypeEnum = {
    Email: 'email',
    Username: 'username',
    Phone: 'phone',
    Enterprise: 'enterprise'
} as const;
export type CreateUserIdentityRequestTypeEnum = typeof CreateUserIdentityRequestTypeEnum[keyof typeof CreateUserIdentityRequestTypeEnum];


/**
 * Check if a given object implements the CreateUserIdentityRequest interface.
 */
export function instanceOfCreateUserIdentityRequest(value: object): value is CreateUserIdentityRequest {
    return true;
}

export function CreateUserIdentityRequestFromJSON(json: any): CreateUserIdentityRequest {
    return CreateUserIdentityRequestFromJSONTyped(json, false);
}

export function CreateUserIdentityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserIdentityRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'] == null ? undefined : json['value'],
        'type': json['type'] == null ? undefined : json['type'],
        'phoneCountryId': json['phone_country_id'] == null ? undefined : json['phone_country_id'],
    };
}

  export function CreateUserIdentityRequestToJSON(json: any): CreateUserIdentityRequest {
      return CreateUserIdentityRequestToJSONTyped(json, false);
  }

  export function CreateUserIdentityRequestToJSONTyped(value?: CreateUserIdentityRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'value': value['value'],
        'type': value['type'],
        'phone_country_id': value['phoneCountryId'],
    };
}

