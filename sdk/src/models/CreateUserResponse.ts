/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserIdentity } from './UserIdentity';
import {
    UserIdentityFromJSON,
    UserIdentityFromJSONTyped,
    UserIdentityToJSON,
    UserIdentityToJSONTyped,
} from './UserIdentity';

/**
 * 
 * @export
 * @interface CreateUserResponse
 */
export interface CreateUserResponse {
    /**
     * Unique id of the user in Kinde.
     * @type {string}
     * @memberof CreateUserResponse
     */
    id?: string;
    /**
     * True if the user was successfully created.
     * @type {boolean}
     * @memberof CreateUserResponse
     */
    created?: boolean;
    /**
     * 
     * @type {Array<UserIdentity>}
     * @memberof CreateUserResponse
     */
    identities?: Array<UserIdentity>;
}

/**
 * Check if a given object implements the CreateUserResponse interface.
 */
export function instanceOfCreateUserResponse(value: object): value is CreateUserResponse {
    return true;
}

export function CreateUserResponseFromJSON(json: any): CreateUserResponse {
    return CreateUserResponseFromJSONTyped(json, false);
}

export function CreateUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'created': json['created'] == null ? undefined : json['created'],
        'identities': json['identities'] == null ? undefined : ((json['identities'] as Array<any>).map(UserIdentityFromJSON)),
    };
}

  export function CreateUserResponseToJSON(json: any): CreateUserResponse {
      return CreateUserResponseToJSONTyped(json, false);
  }

  export function CreateUserResponseToJSONTyped(value?: CreateUserResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created': value['created'],
        'identities': value['identities'] == null ? undefined : ((value['identities'] as Array<any>).map(UserIdentityToJSON)),
    };
}

