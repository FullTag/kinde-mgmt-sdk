/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrganizationUserPermissionRolesInner } from './OrganizationUserPermissionRolesInner';
import {
    OrganizationUserPermissionRolesInnerFromJSON,
    OrganizationUserPermissionRolesInnerFromJSONTyped,
    OrganizationUserPermissionRolesInnerToJSON,
    OrganizationUserPermissionRolesInnerToJSONTyped,
} from './OrganizationUserPermissionRolesInner';

/**
 * 
 * @export
 * @interface OrganizationUserPermission
 */
export interface OrganizationUserPermission {
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserPermission
     */
    description?: string;
    /**
     * 
     * @type {Array<OrganizationUserPermissionRolesInner>}
     * @memberof OrganizationUserPermission
     */
    roles?: Array<OrganizationUserPermissionRolesInner>;
}

/**
 * Check if a given object implements the OrganizationUserPermission interface.
 */
export function instanceOfOrganizationUserPermission(value: object): value is OrganizationUserPermission {
    return true;
}

export function OrganizationUserPermissionFromJSON(json: any): OrganizationUserPermission {
    return OrganizationUserPermissionFromJSONTyped(json, false);
}

export function OrganizationUserPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationUserPermission {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(OrganizationUserPermissionRolesInnerFromJSON)),
    };
}

  export function OrganizationUserPermissionToJSON(json: any): OrganizationUserPermission {
      return OrganizationUserPermissionToJSONTyped(json, false);
  }

  export function OrganizationUserPermissionToJSONTyped(value?: OrganizationUserPermission | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'key': value['key'],
        'name': value['name'],
        'description': value['description'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(OrganizationUserPermissionRolesInnerToJSON)),
    };
}

