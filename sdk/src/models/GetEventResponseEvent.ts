/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetEventResponseEvent
 */
export interface GetEventResponseEvent {
    /**
     * 
     * @type {string}
     * @memberof GetEventResponseEvent
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof GetEventResponseEvent
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof GetEventResponseEvent
     */
    eventId?: string;
    /**
     * Timestamp in ISO 8601 format.
     * @type {string}
     * @memberof GetEventResponseEvent
     */
    timestamp?: string;
    /**
     * Event specific data object.
     * @type {object}
     * @memberof GetEventResponseEvent
     */
    data?: object;
}

/**
 * Check if a given object implements the GetEventResponseEvent interface.
 */
export function instanceOfGetEventResponseEvent(value: object): value is GetEventResponseEvent {
    return true;
}

export function GetEventResponseEventFromJSON(json: any): GetEventResponseEvent {
    return GetEventResponseEventFromJSONTyped(json, false);
}

export function GetEventResponseEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEventResponseEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'source': json['source'] == null ? undefined : json['source'],
        'eventId': json['event_id'] == null ? undefined : json['event_id'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
        'data': json['data'] == null ? undefined : json['data'],
    };
}

  export function GetEventResponseEventToJSON(json: any): GetEventResponseEvent {
      return GetEventResponseEventToJSONTyped(json, false);
  }

  export function GetEventResponseEventToJSONTyped(value?: GetEventResponseEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'source': value['source'],
        'event_id': value['eventId'],
        'timestamp': value['timestamp'],
        'data': value['data'],
    };
}

