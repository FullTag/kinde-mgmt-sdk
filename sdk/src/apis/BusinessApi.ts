/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  GetBusinessResponse,
  SuccessResponse,
  UpdateBusinessRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GetBusinessResponseFromJSON,
    GetBusinessResponseToJSON,
    SuccessResponseFromJSON,
    SuccessResponseToJSON,
    UpdateBusinessRequestFromJSON,
    UpdateBusinessRequestToJSON,
} from '../models/index';

export interface UpdateBusinessOperationRequest {
    updateBusinessRequest: UpdateBusinessRequest;
}

/**
 * 
 */
export class BusinessApi extends runtime.BaseAPI {

    /**
     * Get your business details.
     * Get business
     */
    async getBusinessRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBusinessResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("ManagementAPI", []);
        }

        const response = await this.request({
            path: `/api/v1/business`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetBusinessResponseFromJSON(jsonValue));
    }

    /**
     * Get your business details.
     * Get business
     */
    async getBusiness(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBusinessResponse> {
        const response = await this.getBusinessRaw(initOverrides);
        return await response.value();
    }

    /**
     * Update your business details.
     * Update business
     */
    async updateBusinessRaw(requestParameters: UpdateBusinessOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
        if (requestParameters['updateBusinessRequest'] == null) {
            throw new runtime.RequiredError(
                'updateBusinessRequest',
                'Required parameter "updateBusinessRequest" was null or undefined when calling updateBusiness().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("ManagementAPI", ["update:businesses"]);
        }

        const response = await this.request({
            path: `/api/v1/business`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateBusinessRequestToJSON(requestParameters['updateBusinessRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseFromJSON(jsonValue));
    }

    /**
     * Update your business details.
     * Update business
     */
    async updateBusiness(requestParameters: UpdateBusinessOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
        const response = await this.updateBusinessRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
