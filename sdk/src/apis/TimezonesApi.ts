/* tslint:disable */
/* eslint-disable */
/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SuccessResponse,
} from '../models/index';
import {
    SuccessResponseFromJSON,
    SuccessResponseToJSON,
} from '../models/index';

export interface GetTimezonesRequest {
    timezoneKey?: string;
    name?: string;
}

/**
 * 
 */
export class TimezonesApi extends runtime.BaseAPI {

    /**
     * Get a list of timezones and associated timezone keys.
     * List timezones and timezone IDs.
     */
    async getTimezonesRaw(requestParameters: GetTimezonesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>> {
        const queryParameters: any = {};

        if (requestParameters['timezoneKey'] != null) {
            queryParameters['timezone_key'] = requestParameters['timezoneKey'];
        }

        if (requestParameters['name'] != null) {
            queryParameters['name'] = requestParameters['name'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("kindeBearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/timezones`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseFromJSON(jsonValue));
    }

    /**
     * Get a list of timezones and associated timezone keys.
     * List timezones and timezone IDs.
     */
    async getTimezones(requestParameters: GetTimezonesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse> {
        const response = await this.getTimezonesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
